from utils import GroqConfig

config = GroqConfig()


def llm_reply(form_text, qst):
    """
    Answer a question based on the provided form text using Groq API.
    Args:
        form_text (str): The text extracted from the form.
        qst (str): The question to be answered.
    Returns:
        str: The answer generated by the Groq API.
    """
    prompt = f"""
You are an intelligent document assistant specialized in analyzing forms and structured/unstructured documents.
Your task is to answer questions **only** using the information provided in the given form text. 
Do not make assumptions or hallucinate information. If the answer is not present in the form, reply with: 'The information is not available in the form.'

Follow these guidelines strictly:

1. **Accuracy**: Only use information explicitly present in the form.
2. **Clarity**: Answer concisely in complete sentences.
3. **Formatting**:
   - If the answer is a list, provide bullet points.
   - If the answer is numeric or date, format it clearly.
4. **Context awareness**: Understand the structure of the form, including tables, headers, and sections.
5. **Reference**: If helpful, you may refer to the relevant section or field in your answer.
6. **Politeness**: Maintain a professional tone suitable for document analysis.

Form content:
{form_text}

Question: {qst}

Answer:
"""

    try:
        response = config.client.chat.completions.create(
            model=config.model,
            messages=[{"role": "user", "content": prompt}],
            temperature=0.2,
        )
        return response.choices[0].message.content.strip()

    except Exception as e:
        return f"Error occurred: {e}"
